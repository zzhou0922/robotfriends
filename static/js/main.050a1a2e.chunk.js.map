{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","name","email","react_default","a","createElement","className","src","concat","alt","CardList","_ref","robots","cardArray","map","user","i","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchfield","target","value","state","inherits","createClass","_this2","fetch","then","reponse","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.050a1a2e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n\tconst { id, name, email } = props;\r\n\treturn (\r\n\t\t<div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\r\n\t\t\t<img src={`https://robohash.org/${id}?200x200' alt=\"robots`} alt='robophotos'/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\t\t\r\n\t\t</div>\t\t\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\tconst cardArray = robots.map( (user, i) => {\r\n\t\treturn (\r\n\t\t\t<Card \r\n\t\t\t\tkey={i} \r\n\t\t\t\tid={robots[i].id} \r\n\t\t\t\tname={robots[i].name} \r\n\t\t\t\temail={robots[i].email} \r\n\t\t\t/>\r\n\t\t\t);\r\n\r\n\t});\r\n\treturn (\r\n\t\t<div>\r\n\t      { cardArray }\r\n\t    </div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='search robots' \r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{ overflowY: 'scroll', border: '1px solid black', height:'500px' }}>\r\n\t\t\t{ props.children }\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport './App.css'\r\n\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(reponse => reponse.json())\r\n\t\t\t.then(users => this.setState( { robots: users} ));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState( {searchfield: event.target.value} );\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t});\r\n\t\tif(!robots.length) { //equivalnt to robots.length === 0\r\n\t\t\treturn <h1>Loading</h1>\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1 className='f2'>RobotFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}